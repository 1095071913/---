{
  "modules": [
    {
      "name": "User",
      "chnname": "用户",
      "entities": [
        {
          "title": "user",
          "fields": [
            {
              "name": "id",
              "type": "BigInt",
              "remark": "自增id",
              "chnname": "id",
              "pk": true,
              "notNull": true,
              "autoIncrement": true
            },
            {
              "name": "createDate",
              "type": "DateTime",
              "remark": "创建时间",
              "chnname": "createDate"
            },
            {
              "name": "updateDate",
              "type": "DateTime",
              "remark": "更新时间",
              "chnname": "updateDate"
            },
            {
              "name": "createBy",
              "type": "DefaultString",
              "remark": "创建者",
              "chnname": "createBy"
            },
            {
              "name": "updateBy",
              "type": "DefaultString",
              "remark": "更新者",
              "chnname": "updateBy"
            },
            {
              "name": "remarks",
              "type": "DefaultString",
              "remark": "备注信息",
              "chnname": "remarks"
            },
            {
              "name": "deleted",
              "type": "YesNo",
              "remark": "逻辑删除",
              "chnname": "deleted"
            },
            {
              "name": "extendS1",
              "type": "DefaultString",
              "remark": "扩展String  1",
              "chnname": "extendS1"
            },
            {
              "name": "extendS2",
              "type": "DefaultString",
              "remark": "扩展String  2",
              "chnname": "extendS2"
            },
            {
              "name": "extendS3",
              "type": "DefaultString",
              "remark": "扩展String  3",
              "chnname": "extendS3"
            },
            {
              "name": "extendS4",
              "type": "DefaultString",
              "remark": "扩展String  4",
              "chnname": "extendS4"
            },
            {
              "name": "extendS5",
              "type": "DefaultString",
              "remark": "扩展String  5",
              "chnname": "extendS5"
            },
            {
              "name": "extendS6",
              "type": "DefaultString",
              "remark": "扩展String  6",
              "chnname": "extendS6"
            },
            {
              "name": "extendS7",
              "type": "DefaultString",
              "remark": "扩展String  7",
              "chnname": "extendS7"
            },
            {
              "name": "extendS8",
              "type": "DefaultString",
              "remark": "扩展String  8",
              "chnname": "extendS8"
            },
            {
              "name": "extendI1",
              "type": "Integer",
              "remark": "扩展Integer  1",
              "chnname": "extendI1"
            },
            {
              "name": "extendI2",
              "type": "Integer",
              "remark": "扩展Integer  2",
              "chnname": "extendI2"
            },
            {
              "name": "extendI3",
              "type": "Integer",
              "remark": "扩展Integer  3",
              "chnname": "extendI3"
            },
            {
              "name": "extendI4",
              "type": "Integer",
              "remark": "扩展Integer  4",
              "chnname": "extendI4"
            },
            {
              "name": "extendF1",
              "type": "BigInt",
              "remark": "扩展Float  1",
              "chnname": "extendF1"
            },
            {
              "name": "extendF2",
              "type": "BigInt",
              "remark": "扩展Float  2",
              "chnname": "extendF2"
            },
            {
              "name": "extendF3",
              "type": "BigInt",
              "remark": "扩展Float  3",
              "chnname": "extendF3"
            },
            {
              "name": "extendF4",
              "type": "BigInt",
              "remark": "扩展Float  4",
              "chnname": "extendF4"
            },
            {
              "name": "extendD1",
              "type": "DateTime",
              "remark": "扩展 Date  1",
              "chnname": "extendD1"
            },
            {
              "name": "extendD2",
              "type": "DateTime",
              "remark": "扩展 Date  2",
              "chnname": "extendD2"
            },
            {
              "name": "extendD3",
              "type": "DateTime",
              "remark": "扩展 Date  3",
              "chnname": "extendD3"
            },
            {
              "name": "extendD4",
              "type": "DateTime",
              "remark": "扩展 Date  4",
              "chnname": "extendD4"
            }
          ]
        }
      ],
      "graphCanvas": {}
    }
  ],
  "dataTypeDomains": {
    "datatype": [
      {
        "name": "默认字串",
        "code": "DefaultString",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(32)"
          },
          "SQLServer": {
            "type": "NVARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "标识号",
        "code": "IdOrKey",
        "apply": {
          "ORACLE": {
            "type": "VARCHAR2(32)"
          },
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "SQLServer": {
            "type": "VARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "标识号-长",
        "code": "LongKey",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(64)"
          },
          "ORACLE": {
            "type": "VARCHAR2(64)"
          },
          "SQLServer": {
            "type": "VARCHAR(64)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(64)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "名称",
        "code": "Name",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(128)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(128)"
          },
          "SQLServer": {
            "type": "NVARCHAR(128)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(128)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "备注说明",
        "code": "Intro",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(512)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(512)"
          },
          "SQLServer": {
            "type": "NVARCHAR(512)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(512)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "字串-短",
        "code": "ShortString",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(128)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(128)"
          },
          "SQLServer": {
            "type": "NVARCHAR(128)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(128)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "字串-中",
        "code": "MiddleString",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(1024)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(1024)"
          },
          "SQLServer": {
            "type": "NVARCHAR(1024)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(1024)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "字串-长",
        "code": "LongString",
        "apply": {
          "ORACLE": {
            "type": "NVARCHAR2(3072)"
          },
          "MYSQL": {
            "type": "VARCHAR(3072)"
          },
          "SQLServer": {
            "type": "NVARCHAR(3072)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(3072)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "大文本",
        "code": "LongText",
        "apply": {
          "MYSQL": {
            "type": "TEXT"
          },
          "ORACLE": {
            "type": "CLOB"
          },
          "SQLServer": {
            "type": "NTEXT"
          },
          "PostgreSQL": {
            "type": "TEXT"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "小数",
        "code": "Double",
        "apply": {
          "MYSQL": {
            "type": "DECIMAL(32,10)"
          },
          "ORACLE": {
            "type": "NUMBER(32,10)"
          },
          "SQLServer": {
            "type": "DECIMAL(32,10)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(32,10)"
          },
          "java": {
            "type": "Double"
          }
        }
      },
      {
        "name": "比例",
        "code": "Ratio",
        "apply": {
          "MYSQL": {
            "type": "DECIMAL(4,2)"
          },
          "ORACLE": {
            "type": "NUMBER(4,2)"
          },
          "SQLServer": {
            "type": "DECIMAL(4,2)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(4,2)"
          },
          "java": {
            "type": "Double"
          }
        }
      },
      {
        "name": "整数",
        "code": "Integer",
        "apply": {
          "MYSQL": {
            "type": "INT"
          },
          "ORACLE": {
            "type": "INT"
          },
          "SQLServer": {
            "type": "INT"
          },
          "PostgreSQL": {
            "type": "INT"
          },
          "java": {
            "type": "Integer"
          }
        }
      },
      {
        "name": "大整数",
        "code": "BigInt",
        "apply": {
          "MYSQL": {
            "type": "BIGINT"
          },
          "ORACLE": {
            "type": "NUMBER"
          },
          "SQLServer": {
            "type": "BIGINT"
          },
          "PostgreSQL": {
            "type": "BIGINT"
          },
          "java": {
            "type": "Long"
          }
        }
      },
      {
        "name": "金额",
        "code": "Money",
        "apply": {
          "MYSQL": {
            "type": "DECIMAL(32,8)"
          },
          "ORACLE": {
            "type": "NUMBER(32,8)"
          },
          "SQLServer": {
            "type": "DECIMAL(32,8)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(32,8)"
          },
          "java": {
            "type": "Double"
          }
        }
      },
      {
        "name": "是否",
        "code": "YesNo",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(1)"
          },
          "ORACLE": {
            "type": "VARCHAR2(1)"
          },
          "SQLServer": {
            "type": "VARCHAR(1)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(1)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "数据字典",
        "code": "Dict",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "ORACLE": {
            "type": "VARCHAR2(32)"
          },
          "SQLServer": {
            "type": "VARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          },
          "java": {
            "type": "String"
          }
        }
      },
      {
        "name": "日期",
        "code": "Date",
        "apply": {
          "MYSQL": {
            "type": "DATE"
          },
          "ORACLE": {
            "type": "DATE"
          },
          "SQLServer": {
            "type": "DATE"
          },
          "PostgreSQL": {
            "type": "DATE"
          },
          "java": {
            "type": "Date"
          }
        }
      },
      {
        "name": "日期时间",
        "code": "DateTime",
        "apply": {
          "MYSQL": {
            "type": "DATETIME"
          },
          "ORACLE": {
            "type": "DATE"
          },
          "SQLServer": {
            "type": "DATE"
          },
          "PostgreSQL": {
            "type": "DATE"
          },
          "java": {
            "type": "Date"
          }
        }
      },
      {
        "name": "单字符",
        "code": "Char",
        "apply": {
          "MYSQL": {
            "type": "CHAR(1)"
          },
          "ORACLE": {
            "type": "CHAR(1)"
          },
          "SQLServer": {
            "type": "CHAR(1)"
          },
          "PostgreSQL": {
            "type": "CHAR(1)"
          },
          "java": {
            "type": "String"
          }
        }
      }
    ],
    "database": [
      {
        "code": "MYSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "fileShow": true,
        "defaultDatabase": true,
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,' ')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,' ') }}';{{=it.separator}}\n$blankline\n",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table PDMAN_UP_{{=it.oldEntity.title}}\nas select * from {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n{{~it.newEntity.indexs:index}}\nALTER TABLE {{=it.newEntity.title}} ADD {{? index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=index.name}}({{=it.func.join(...index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}} {{? it.field.addAfter}}AFTER {{=it.field.addAfter}}{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP {{=it.field.name}};{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}"
      },
      {
        "code": "ORACLE",
        "template": "DROP TABLE {{=it.entity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}  {{= field.pk ? 'NOT NULL' : '' }} {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\nCOMMENT ON TABLE {{=it.entity.title}} IS '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}';{{=it.separator}}\n{{~it.entity.fields:field:index}}\nCOMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS '{{=it.func.join(field.chnname,field.remark,';')}}';{{=it.separator}}\n{{~}}",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/\r\n$blankline",
        "rebuildTableTemplate": "CREATE TABLE PDMAN_UP_{{=it.oldEntity.title}}\nAS SELECT * FROM {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nDROP TABLE {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}{{~it.newEntity.fields:field:index}}{{? field.pk }}{{ pkList.push(field.name) }}{{?}}    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}{{? pkList.length >0 }}    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}}){{?}}\n);{{=it.separator}}\n$blankline\n{{? it.newEntity.chnname || it.newEntity.remark}}COMMENT ON TABLE {{=it.newEntity.title}} IS {{? it.newEntity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.newEntity.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~it.newEntity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.newEntity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~}}\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\n$blankline\nINSERT INTO {{=it.newEntity.title}}(\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}) \nSELECT\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}FROM PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n\nDROP TABLE PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n{{~it.newEntity.indexs:index}}\nCREATE{{? index.isUnique}} UNIQUE{{?}} INDEX {{=index.name}} ON {{=it.newEntity.title}}({{=it.func.join(index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{=it.separator}}{{?}}\r\n$blankline",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP({{=it.field.name}});{{=it.separator}}\r\n$blankline",
        "deleteIndexTemplate": "DROP INDEX {{=it.entity.title}}.{{=it.index.name}};{{=it.separator}}\r\n$blankline",
        "createIndexTemplate": "CREATE{{? it.index.isUnique}} UNIQUE{{?}} INDEX {{=it.index.name}} ON {{=it.entity.title}}({{=it.func.join(it.index.fields,',')}});{{=it.separator}}\r\n$blankline",
        "updateTableComment": "{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline"
      },
      {
        "code": "SQLServer",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'IDENTITY(1,1)' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}  {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    CONSTRAINT PK_{{=it.entity.title}} PRIMARY KEY CLUSTERED ({{~pkList:pkName:i}}{{= pkName }} ASC {{= i<pkList.length-1 ? ',' : '' }}{{~}}) ON [PRIMARY] \n{{?}}\n) ;{{=it.separator}}\n\n$blankline\nEXECUTE sp_addextendedproperty N'MS_Description', '{{= it.entity.chnname || it.entity.remark}}', N'user', N'dbo', N'table', N'{{=it.entity.title}}', NULL, NULL;{{=it.separator}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}EXECUTE sp_addextendedproperty N'MS_Description', {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}}, N'user', N'dbo', N'table', N'{{=it.entity.title}}', N'column', N'{{=field.name}}';{{=it.separator}}{{?}}\n{{~}}\n",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      },
      {
        "code": "PostgreSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table PDMAN_UP_{{=it.oldEntity.title}}\nas select * from {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}} {{? it.field.addAfter}}AFTER {{=it.field.addAfter}}{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP {{=it.field.name}};{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}"
      },
      {
        "code": "java",
        "template": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n\n/** {{=it.entity.chnname}} */\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "createTableTemplate": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      }
    ]
  },
  "profile": {
    "defaultFields": [
      {
        "name": "id",
        "type": "BigInt",
        "remark": "自增id",
        "chnname": "id",
        "pk": true,
        "notNull": true,
        "autoIncrement": true
      },
      {
        "name": "createDate",
        "type": "DateTime",
        "remark": "创建时间",
        "chnname": "createDate"
      },
      {
        "name": "updateDate",
        "type": "DateTime",
        "remark": "更新时间",
        "chnname": "updateDate"
      },
      {
        "name": "createBy",
        "type": "DefaultString",
        "remark": "创建者",
        "chnname": "createBy"
      },
      {
        "name": "updateBy",
        "type": "DefaultString",
        "remark": "更新者",
        "chnname": "updateBy"
      },
      {
        "name": "remarks",
        "type": "DefaultString",
        "remark": "备注信息",
        "chnname": "remarks"
      },
      {
        "name": "deleted",
        "type": "YesNo",
        "remark": "逻辑删除",
        "chnname": "deleted"
      },
      {
        "name": "extendS1",
        "type": "DefaultString",
        "remark": "扩展String  1",
        "chnname": "extendS1"
      },
      {
        "name": "extendS2",
        "type": "DefaultString",
        "remark": "扩展String  2",
        "chnname": "extendS2"
      },
      {
        "name": "extendS3",
        "type": "DefaultString",
        "remark": "扩展String  3",
        "chnname": "extendS3"
      },
      {
        "name": "extendS4",
        "type": "DefaultString",
        "remark": "扩展String  4",
        "chnname": "extendS4"
      },
      {
        "name": "extendS5",
        "type": "DefaultString",
        "remark": "扩展String  5",
        "chnname": "extendS5"
      },
      {
        "name": "extendS6",
        "type": "DefaultString",
        "remark": "扩展String  6",
        "chnname": "extendS6"
      },
      {
        "name": "extendS7",
        "type": "DefaultString",
        "remark": "扩展String  7",
        "chnname": "extendS7"
      },
      {
        "name": "extendS8",
        "type": "DefaultString",
        "remark": "扩展String  8",
        "chnname": "extendS8"
      },
      {
        "name": "extendI1",
        "type": "Integer",
        "remark": "扩展Integer  1",
        "chnname": "extendI1"
      },
      {
        "name": "extendI2",
        "type": "Integer",
        "remark": "扩展Integer  2",
        "chnname": "extendI2"
      },
      {
        "name": "extendI3",
        "type": "Integer",
        "remark": "扩展Integer  3",
        "chnname": "extendI3"
      },
      {
        "name": "extendI4",
        "type": "Integer",
        "remark": "扩展Integer  4",
        "chnname": "extendI4"
      },
      {
        "name": "extendF1",
        "type": "BigInt",
        "remark": "扩展Float  1",
        "chnname": "extendF1"
      },
      {
        "name": "extendF2",
        "type": "BigInt",
        "remark": "扩展Float  2",
        "chnname": "extendF2"
      },
      {
        "name": "extendF3",
        "type": "BigInt",
        "remark": "扩展Float  3",
        "chnname": "extendF3"
      },
      {
        "name": "extendF4",
        "type": "BigInt",
        "remark": "扩展Float  4",
        "chnname": "extendF4"
      },
      {
        "name": "extendD1",
        "type": "DateTime",
        "remark": "扩展 Date  1",
        "chnname": "extendD1"
      },
      {
        "name": "extendD2",
        "type": "DateTime",
        "remark": "扩展 Date  2",
        "chnname": "extendD2"
      },
      {
        "name": "extendD3",
        "type": "DateTime",
        "remark": "扩展 Date  3",
        "chnname": "extendD3"
      },
      {
        "name": "extendD4",
        "type": "DateTime",
        "remark": "扩展 Date  4",
        "chnname": "extendD4"
      }
    ],
    "defaultFieldsType": "1",
    "javaConfig": {
      "JAVA_HOME": "C:\\Program Files\\Java\\jdk-10.0.2",
      "DB_DRIVE": []
    },
    "sqlConfig": "/*SQL@Run*/",
    "dbs": [
      {
        "name": "boot",
        "defaultDB": true,
        "properties": {
          "driver_class_name": "com.mysql.cj.jdbc.Driver",
          "url": "jdbc:mysql://118.126.64.217:3306/boot?useSSL=false&serverTimezone=UTC&characterEncoding=utf8",
          "username": "root",
          "password": "root"
        },
        "type": "MYSQL"
      }
    ],
    "wordTemplateConfig": ""
  }
}