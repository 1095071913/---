1.NFS配置
mkdir -p /data/nfs-share
mkdir -p /data/mysql-master
mkdir -p /data/mysql-slave
chmod a+rw /data/nfs-share
chmod a+rw /data/mysql-master
chmod a+rw /data/mysql-slave

nano /etc/exports
#底部添加

############内容 Begin############

/data/nfs-share *(rw,sync,no_subtree_check,no_root_squash)
/data/mysql-master *(rw,sync,no_subtree_check,no_root_squash)
/data/mysql-slave *(rw,sync,no_subtree_check,no_root_squash)

############内容 End##############

/etc/init.d/nfs-kernel-server restart


2.下载安装包
git clone https://github.com/nacos-group/nacos-k8s.git

3.部署 NFS
kubectl create -f deploy/nfs/rbac.yaml

nano deploy/nfs/deployment.yaml
################内容 Begin#################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-client-provisioner
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: nfs-client-provisioner
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
    spec:
      serviceAccount: nfs-client-provisioner
      containers:
      - name: nfs-client-provisioner
        image: quay.io/external_storage/nfs-client-provisioner:latest
        volumeMounts:
        - name: nfs-client-root
          mountPath: /persistentvolumes
        env:
        - name: PROVISIONER_NAME
          value: fuseim.pri/ifs
        - name: NFS_SERVER
          # 修改为 NFS 服务端 IP
          value: 192.168.141.130
        - name: NFS_PATH
          # 修改为 NFS 服务端共享目录
          value: /data/nfs-share
      volumes:
      - name: nfs-client-root
        nfs:
          # 修改为 NFS 服务端 IP
          server: 192.168.141.130
          # 修改为 NFS 服务端共享目录
          path: /data/nfs-share
          
#############内容 Begin###############

kubectl create -f deploy/nfs/deployment.yaml
kubectl create -f deploy/nfs/class.yaml


3.部署数据库
nano deploy/mysql/mysql-master-nfs.yaml
##############内容 Begin##############

apiVersion: v1
kind: ReplicationController
metadata:
  name: mysql-master
  labels:
    name: mysql-master
spec:
  replicas: 1
  selector:
    name: mysql-master
  template:
    metadata:
      labels:
        name: mysql-master
    spec:
      containers:
      - name: master
        image: nacos/nacos-mysql-master:latest
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-master-data
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "nacos_devtest"
        - name: MYSQL_USER
          value: "nacos"
        - name: MYSQL_PASSWORD
          value: "nacos"
        - name: MYSQL_REPLICATION_USER
          value: 'nacos_ru'
        - name: MYSQL_REPLICATION_PASSWORD
          value: 'nacos_ru'
      volumes:
      - name: mysql-master-data
        nfs:
          # 修改为 NFS 服务端 IP
          server: 192.168.141.130
          # 修改为 NFS 服务端共享目录
          path: /data/mysql-master
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-master
  labels:
    name: mysql-master
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: mysql-master
    
#############内容 End################


kubectl create -f deploy/mysql/mysql-master-nfs.yaml


nano deploy/mysql/mysql-slave-nfs.yaml
#############内容 Begin################

apiVersion: v1
kind: ReplicationController
metadata:
  name: mysql-slave
  labels:
    name: mysql-slave
spec:
  replicas: 1
  selector:
    name: mysql-slave
  template:
    metadata:
      labels:
        name: mysql-slave
    spec:
      containers:
      - name: slave
        image: nacos/nacos-mysql-slave:latest
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-slave-data
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_REPLICATION_USER
          value: 'nacos_ru'
        - name: MYSQL_REPLICATION_PASSWORD
          value: 'nacos_ru'
      volumes:
      - name: mysql-slave-data
        nfs:
          # 修改为 NFS 服务端 IP
          server: 192.168.141.130
          # 修改为 NFS 服务端共享目录
          path: /data/mysql-slave
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-slave
  labels:
    name: mysql-slave
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: mysql-slave

#############内容 End##################

kubectl create -f deploy/mysql/mysql-slave-nfs.yaml

4.部署 Nacos
kubectl create -f deploy/nacos/nacos-pvc-nfs.yaml

5.路由 Nacos
#创建一个名为 nacos.yml 的 Ingress 配置文件

############内容 Begin#############

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: nacos-web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: nacos.lanhe.com
    http:
      paths:
      - path:
        backend:
          serviceName: nacos-headless
          servicePort: 8848

############内容 End###############

kubectl apply -f nacos.yml














